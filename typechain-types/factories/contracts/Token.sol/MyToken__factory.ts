/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/Token.sol/MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336040518060400160405280600981526020017f526f6e6e546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f524f4e0000000000000000000000000000000000000000000000000000000000815250816003908161008d9190610729565b50806004908161009d9190610729565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101125760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610109919061083c565b60405180910390fd5b6101218161015d60201b60201c565b506101583361013461022360201b60201c565b600a61014091906109c6565b6103e861014d9190610a11565b61022c60201b60201c565b610ae8565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361029e5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610295919061083c565b60405180910390fd5b6102b0600083836102b460201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103065780600260008282546102fa9190610a53565b925050819055506103d9565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610392578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161038993929190610a96565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610422578060026000828254039250508190555061046f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104cc9190610acd565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061055a57607f821691505b60208210810361056d5761056c610513565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105d57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610598565b6105df8683610598565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061062661062161061c846105f7565b610601565b6105f7565b9050919050565b6000819050919050565b6106408361060b565b61065461064c8261062d565b8484546105a5565b825550505050565b600090565b61066961065c565b610674818484610637565b505050565b5b818110156106985761068d600082610661565b60018101905061067a565b5050565b601f8211156106dd576106ae81610573565b6106b784610588565b810160208510156106c6578190505b6106da6106d285610588565b830182610679565b50505b505050565b600082821c905092915050565b6000610700600019846008026106e2565b1980831691505092915050565b600061071983836106ef565b9150826002028217905092915050565b610732826104d9565b67ffffffffffffffff81111561074b5761074a6104e4565b5b6107558254610542565b61076082828561069c565b600060209050601f8311600181146107935760008415610781578287015190505b61078b858261070d565b8655506107f3565b601f1984166107a186610573565b60005b828110156107c9578489015182556001820191506020850194506020810190506107a4565b868310156107e657848901516107e2601f8916826106ef565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610826826107fb565b9050919050565b6108368161081b565b82525050565b6000602082019050610851600083018461082d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156108dd578086048111156108b9576108b8610857565b5b60018516156108c85780820291505b80810290506108d685610886565b945061089d565b94509492505050565b6000826108f657600190506109b2565b8161090457600090506109b2565b816001811461091a576002811461092457610953565b60019150506109b2565b60ff84111561093657610935610857565b5b8360020a91508482111561094d5761094c610857565b5b506109b2565b5060208310610133831016604e8410600b84101617156109885782820a90508381111561098357610982610857565b5b6109b2565b6109958484846001610893565b925090508184048111156109ac576109ab610857565b5b81810290505b9392505050565b600060ff82169050919050565b60006109d1826105f7565b91506109dc836109b9565b9250610a097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108e6565b905092915050565b6000610a1c826105f7565b9150610a27836105f7565b9250828202610a35816105f7565b91508282048414831517610a4c57610a4b610857565b5b5092915050565b6000610a5e826105f7565b9150610a69836105f7565b9250828201905080821115610a8157610a80610857565b5b92915050565b610a90816105f7565b82525050565b6000606082019050610aab600083018661082d565b610ab86020830185610a87565b610ac56040830184610a87565b949350505050565b6000602082019050610ae26000830184610a87565b92915050565b6111fd80610af76000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b411461024d578063a9059cbb1461026b578063dd62ed3e1461029b578063f2fde38b146102cb576100ea565b806370a08231146101f5578063715018a6146102255780638da5cb5b1461022f576100ea565b806323b872dd116100c857806323b872dd1461015b57806327e235e31461018b578063313ce567146101bb57806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102e7565b6040516101049190610e51565b60405180910390f35b61012760048036038101906101229190610f0c565b610379565b6040516101349190610f67565b60405180910390f35b61014561039c565b6040516101529190610f91565b60405180910390f35b61017560048036038101906101709190610fac565b6103a6565b6040516101829190610f67565b60405180910390f35b6101a560048036038101906101a09190610fff565b6103d5565b6040516101b29190610f91565b60405180910390f35b6101c36103ed565b6040516101d09190611048565b60405180910390f35b6101f360048036038101906101ee9190610f0c565b6103f6565b005b61020f600480360381019061020a9190610fff565b61040c565b60405161021c9190610f91565b60405180910390f35b61022d610454565b005b610237610468565b6040516102449190611072565b60405180910390f35b610255610492565b6040516102629190610e51565b60405180910390f35b61028560048036038101906102809190610f0c565b610524565b6040516102929190610f67565b60405180910390f35b6102b560048036038101906102b0919061108d565b610547565b6040516102c29190610f91565b60405180910390f35b6102e560048036038101906102e09190610fff565b6105ce565b005b6060600380546102f6906110fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610322906110fc565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050905090565b600080610384610654565b905061039181858561065c565b600191505092915050565b6000600254905090565b6000806103b1610654565b90506103be85828561066e565b6103c9858585610702565b60019150509392505050565b60066020528060005260406000206000915090505481565b60006012905090565b6103fe6107f6565b610408828261087d565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61045c6107f6565b61046660006108ff565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104a1906110fc565b80601f01602080910402602001604051908101604052809291908181526020018280546104cd906110fc565b801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b5050505050905090565b60008061052f610654565b905061053c818585610702565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105d66107f6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106485760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161063f9190611072565b60405180910390fd5b610651816108ff565b50565b600033905090565b61066983838360016109c5565b505050565b600061067a8484610547565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106fc57818110156106ec578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106e39392919061112d565b60405180910390fd5b6106fb848484840360006109c5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107745760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161076b9190611072565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e65760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107dd9190611072565b60405180910390fd5b6107f1838383610b9c565b505050565b6107fe610654565b73ffffffffffffffffffffffffffffffffffffffff1661081c610468565b73ffffffffffffffffffffffffffffffffffffffff161461087b5761083f610654565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108729190611072565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ef5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108e69190611072565b60405180910390fd5b6108fb60008383610b9c565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a375760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a2e9190611072565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aa95760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610aa09190611072565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b96578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b8d9190610f91565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bee578060026000828254610be29190611193565b92505081905550610cc1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c7a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c719392919061112d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d0a5780600260008282540392505081905550610d57565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610db49190610f91565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dfb578082015181840152602081019050610de0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e2382610dc1565b610e2d8185610dcc565b9350610e3d818560208601610ddd565b610e4681610e07565b840191505092915050565b60006020820190508181036000830152610e6b8184610e18565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ea382610e78565b9050919050565b610eb381610e98565b8114610ebe57600080fd5b50565b600081359050610ed081610eaa565b92915050565b6000819050919050565b610ee981610ed6565b8114610ef457600080fd5b50565b600081359050610f0681610ee0565b92915050565b60008060408385031215610f2357610f22610e73565b5b6000610f3185828601610ec1565b9250506020610f4285828601610ef7565b9150509250929050565b60008115159050919050565b610f6181610f4c565b82525050565b6000602082019050610f7c6000830184610f58565b92915050565b610f8b81610ed6565b82525050565b6000602082019050610fa66000830184610f82565b92915050565b600080600060608486031215610fc557610fc4610e73565b5b6000610fd386828701610ec1565b9350506020610fe486828701610ec1565b9250506040610ff586828701610ef7565b9150509250925092565b60006020828403121561101557611014610e73565b5b600061102384828501610ec1565b91505092915050565b600060ff82169050919050565b6110428161102c565b82525050565b600060208201905061105d6000830184611039565b92915050565b61106c81610e98565b82525050565b60006020820190506110876000830184611063565b92915050565b600080604083850312156110a4576110a3610e73565b5b60006110b285828601610ec1565b92505060206110c385828601610ec1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061111457607f821691505b602082108103611127576111266110cd565b5b50919050565b60006060820190506111426000830186611063565b61114f6020830185610f82565b61115c6040830184610f82565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061119e82610ed6565b91506111a983610ed6565b92508282019050808211156111c1576111c0611164565b5b9291505056fea264697066735822122099750a4d66107ff3c6c24d0f7e8251257f7fa6337639d4b31349b1dc1bf136ce64736f6c634300081a0033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
